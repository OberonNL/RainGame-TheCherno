package net.babbster.rain.graphics;

import java.awt.Color;
import java.util.Random;

public class Screen {
	
	private int width;
	private int height;
	
	private final int TILE_SIZE = 16;
	private final int TILE_MAP_SIZE = 16;
	
	public int[] pixels;
	public int[] tiles = new int[TILE_MAP_SIZE * TILE_MAP_SIZE];
	
	private Random random = new Random();
	
	public Screen(int width, int height){
		this.width = width;
		this.height = height;
		pixels = new int[width * height];
		
		//randomize tiles
		for(int i = 0; i < TILE_MAP_SIZE * TILE_MAP_SIZE; i++){
			tiles[i] = random.nextInt(0xffffff);
		}
		
	}
	
	public void clear(){
	
		for(int i = 0; i < pixels.length; i++){
			pixels[i] = 0;
		}
	}
	
	/**
	 * For modifying pixels
	 */
	public void render(int xOffset, int yOffset){

		for(int y = 0; y < height; y++){
			int yy = yOffset;
			if(y >= height || y < 0) break;

			for(int x = 0; x < width; x++){
				//Color c = new Color((int)(Math.random() * 255), (int)(Math.random() * 255), (int)(Math.random() * 255));
				//pixels[time + time * width] = c.getRGB();
				int xx = x + xOffset;
				if(x >= width || x < 0) break;
				
				//we use a tile index to establish tile size and when to change tile color
				int tileIndex = ((xx / TILE_SIZE) & TILE_MAP_SIZE - 1) + ((yy / TILE_SIZE) & TILE_MAP_SIZE - 1) * TILE_MAP_SIZE;
				pixels[x + y * width] = tiles[tileIndex];
			}
		}
	}

}
